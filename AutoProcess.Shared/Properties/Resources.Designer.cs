//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoProcess.Shared.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutoProcess.Shared.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument-{0}.
        /// </summary>
        public static string Argument {
            get {
                return ResourceManager.GetString("Argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ⚠️ Beim Überprüfen/Aktualisieren von {0} ist ein Fehler aufgetreten.\r\nDie Updateprüfung ist fehlgeschlagen oder das Update steht noch aus.\r\nWeitere Einzelheiten finden Sie in der Fehlerausgabe..
        /// </summary>
        public static string DefaultInstallationError {
            get {
                return ResourceManager.GetString("DefaultInstallationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ❌ Ein oder mehrere Argumente sind leer..
        /// </summary>
        public static string EmptyArgument {
            get {
                return ResourceManager.GetString("EmptyArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [🛠 Fehler]: {0}.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [🛠 {0}]: Fehler beim Beenden: {1}.
        /// </summary>
        public static string ErrorProcessExiting {
            get {
                return ResourceManager.GetString("ErrorProcessExiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [🔚 Beendigungscode]: {0}.
        /// </summary>
        public static string ExitCode {
            get {
                return ResourceManager.GetString("ExitCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ❌ {0} ist fehlgeschlagen.\r\nBei der Installation ist ein Problem aufgetreten\r\n{1}.
        /// </summary>
        public static string InstallationSourceError {
            get {
                return ResourceManager.GetString("InstallationSourceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ✅ {0} ist bereits auf dem neuesten Stand..
        /// </summary>
        public static string IsUpToDate {
            get {
                return ResourceManager.GetString("IsUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beende Prozesse mit dem Namen {0} ....
        /// </summary>
        public static string KillProcess {
            get {
                return ResourceManager.GetString("KillProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ❌ Es wurden keine Argumente angegeben..
        /// </summary>
        public static string NoArguments {
            get {
                return ResourceManager.GetString("NoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kein verfügbares Upgrade gefunden.
        /// </summary>
        public static string NoAvailableUpgrade {
            get {
                return ResourceManager.GetString("NoAvailableUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ❌ Datei &apos;{0}&apos; existiert nicht..
        /// </summary>
        public static string NotExist {
            get {
                return ResourceManager.GetString("NotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [🔍 Ausgabe]: {0}.
        /// </summary>
        public static string Output {
            get {
                return ResourceManager.GetString("Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Der Prozess mit dem Namen &apos;{0}&apos; wurde beendet..
        /// </summary>
        public static string ProcessHasTerminated {
            get {
                return ResourceManager.GetString("ProcessHasTerminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ❌ Startfehler: {0}.
        /// </summary>
        public static string ProcessStartError {
            get {
                return ResourceManager.GetString("ProcessStartError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ❌ Fehler beim Update: {0}.
        /// </summary>
        public static string ProcessUpdateError {
            get {
                return ResourceManager.GetString("ProcessUpdateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Die Versionen sind gleich: {0} == {1}.
        /// </summary>
        public static string SameVersions {
            get {
                return ResourceManager.GetString("SameVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starte {0} ....
        /// </summary>
        public static string StartProcess {
            get {
                return ResourceManager.GetString("StartProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ❌ Mögliche Ursachen: beschädigte Dateien, fehlerhafte DLL oder Störungen durch das Antivirenprogramm..
        /// </summary>
        public static string StatusStackBufferOverrun {
            get {
                return ResourceManager.GetString("StatusStackBufferOverrun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ✅ {0} wurde erfolgreich aktualisiert..
        /// </summary>
        public static string SuccessUpdated {
            get {
                return ResourceManager.GetString("SuccessUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [🛠 Test fehlgeschlagen]: {0}.
        /// </summary>
        public static string TestFailed {
            get {
                return ResourceManager.GetString("TestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [⚠️ Originalversion]: {0} - {1}.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warten auf den Abschlussprozess {0}.
        /// </summary>
        public static string WaitCompleteProcess {
            get {
                return ResourceManager.GetString("WaitCompleteProcess", resourceCulture);
            }
        }
    }
}
